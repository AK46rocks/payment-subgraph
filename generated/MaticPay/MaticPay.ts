// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProxyOwnerUpdate extends ethereum.Event {
  get params(): ProxyOwnerUpdate__Params {
    return new ProxyOwnerUpdate__Params(this);
  }
}

export class ProxyOwnerUpdate__Params {
  _event: ProxyOwnerUpdate;

  constructor(event: ProxyOwnerUpdate) {
    this._event = event;
  }

  get _new(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _old(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyUpdated extends ethereum.Event {
  get params(): ProxyUpdated__Params {
    return new ProxyUpdated__Params(this);
  }
}

export class ProxyUpdated__Params {
  _event: ProxyUpdated;

  constructor(event: ProxyUpdated) {
    this._event = event;
  }

  get _new(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _old(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MaticPay extends ethereum.SmartContract {
  static bind(address: Address): MaticPay {
    return new MaticPay("MaticPay", address);
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxyOwner(): Address {
    let result = super.call("proxyOwner", "proxyOwner():(address)", []);

    return result[0].toAddress();
  }

  try_proxyOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("proxyOwner", "proxyOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxyType(): BigInt {
    let result = super.call("proxyType", "proxyType():(uint256)", []);

    return result[0].toBigInt();
  }

  try_proxyType(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("proxyType", "proxyType():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _proxyTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class TransferProxyOwnershipCall extends ethereum.Call {
  get inputs(): TransferProxyOwnershipCall__Inputs {
    return new TransferProxyOwnershipCall__Inputs(this);
  }

  get outputs(): TransferProxyOwnershipCall__Outputs {
    return new TransferProxyOwnershipCall__Outputs(this);
  }
}

export class TransferProxyOwnershipCall__Inputs {
  _call: TransferProxyOwnershipCall;

  constructor(call: TransferProxyOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferProxyOwnershipCall__Outputs {
  _call: TransferProxyOwnershipCall;

  constructor(call: TransferProxyOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAndCallCall extends ethereum.Call {
  get inputs(): UpdateAndCallCall__Inputs {
    return new UpdateAndCallCall__Inputs(this);
  }

  get outputs(): UpdateAndCallCall__Outputs {
    return new UpdateAndCallCall__Outputs(this);
  }
}

export class UpdateAndCallCall__Inputs {
  _call: UpdateAndCallCall;

  constructor(call: UpdateAndCallCall) {
    this._call = call;
  }

  get _newProxyTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpdateAndCallCall__Outputs {
  _call: UpdateAndCallCall;

  constructor(call: UpdateAndCallCall) {
    this._call = call;
  }
}

export class UpdateImplementationCall extends ethereum.Call {
  get inputs(): UpdateImplementationCall__Inputs {
    return new UpdateImplementationCall__Inputs(this);
  }

  get outputs(): UpdateImplementationCall__Outputs {
    return new UpdateImplementationCall__Outputs(this);
  }
}

export class UpdateImplementationCall__Inputs {
  _call: UpdateImplementationCall;

  constructor(call: UpdateImplementationCall) {
    this._call = call;
  }

  get _newProxyTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateImplementationCall__Outputs {
  _call: UpdateImplementationCall;

  constructor(call: UpdateImplementationCall) {
    this._call = call;
  }
}
